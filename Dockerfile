FROM ubuntu:latest

RUN apt-get update &&\
    apt-get install -y git openjdk-11-jdk maven python3 ruby wget vim sudo gcc g++ gcc-multilib g++-multilib make init systemd ca-certificates curl dnsutils htop iputils-ping lsb-release net-tools lftp gnupg gnupg2

#install zookeeper
WORKDIR /usr/local
RUN wget https://dlcdn.apache.org/zookeeper/zookeeper-3.7.1/apache-zookeeper-3.7.1-bin.tar.gz && \
    tar -zxvf apache-zookeeper-3.7.1-bin.tar.gz && \
    mv apache-zookeeper-3.7.1-bin zookeeper && \
    rm apache-zookeeper-3.7.1-bin.tar.gz

#setup zookeeper
WORKDIR /usr/local/zookeeper/data
RUN echo -e "tickTime=2000\ndataDir=/usr/local/zookeeper/data\nclientPort=2181\ninitLimit=10\nsyncLimit=5" >> /usr/local/zookeeper/conf/zoo.cfg

#install storm
WORKDIR /usr/local
RUN wget https://archive.apache.org/dist/storm/apache-storm-2.2.0/apache-storm-2.2.0.tar.gz && \
    tar -zxvf apache-storm-2.2.0.tar.gz && \
    mv apache-storm-2.2.0 storm && \
    rm apache-storm-2.2.0.tar.gz

#setup storm
RUN mkdir /usr/local/storm/data && \
    echo -e "storm.zookeeper.servers:\n\t- "localhost"\nstorm.local.dir: "/usr/local/storm/data"\nnimbus.seeds: ["localhost"]\nsupervisor.slots.ports:\n\t- 6700\n\t- 6701\n\t- 6702\n\t- 6703\nui.port: 8081" >> /usr/local/storm/conf/storm.yaml

ENV PATH $PATH:/usr/local/storm/bin
#RUN echo "export PATH=$PATH:/usr/local/storm/bin" >> $HOME/.profile && \
#    source ~/.profile

RUN ln -s /usr/bin/python3 /usr/bin/python

#install kafka
RUN wget https://downloads.apache.org/kafka/3.3.2/kafka_2.12-3.3.2.tgz && \
    tar -zxvf kafka_2.12-3.3.2.tgz && \
    mv kafka_2.12-3.3.2 kafka && \
    rm kafka_2.12-3.3.2.tgz

#copy files generated by data generator in mitsimlab container
COPY --chown=root:root MITSIMLab/mitsim/data/cardatapoints.out MITSIMLab/mitsim/data/historical-tolls.out MITSIMLab/mitsim/data/maxCarid.out /usr/local/lrb/dgoutput/

#---------------------------------
# For PostgreSQL
#---------------------------------
#ENV TZ=Asia/Tokyo
#ENV LANG=ja_JP.UTF-8
#ENV LANGUAGE=ja_JP:ja
#ENV LC_ALL=ja_JP.UTF-8

#ARG DEBIAN_FRONTEND=noninteractive
#RUN apt-get update && apt-get install -y locales-all
#RUN curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg >/dev/null
#RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
#RUN apt-get update && apt-get install -y postgresql-14

#initialization
#USER postgres
#RUN /etc/init.d/postgresql start && \
#        psql -c "alter user postgres with encrypted password 'postgres'" && \
#        psql -c "create user root with password 'root' superuser;" && \
#        psql -c "create database lrb owner root;" && \
#        psql -d lrb -c "create schema authorization root;" && \
#        psql -c "create role readonly with login password 'readonly';" && \
#        psql -c "grant pg_read_all_data to readonly;"
#RUN echo "host all all 0.0.0.0/0 md5" >> /etc/postgresql/14/main/pg_hba.conf
#RUN echo "listen_addresses='*'" >> /etc/postgresql/14/main/postgresql.conf
#USER root

#expose port
#EXPOSE 5432

#install LRB data driver
WORKDIR /usr/local/lrb/datadriver
RUN wget http://www.cs.brandeis.edu/~linearroad/files/datadriver-src.tar.gz && \
    tar -xzvf datadriver-src.tar.gz


#COPY ./startup.sh /startup.sh
#RUN chmod 744 /startup.sh
#STOPSIGNAL SIGINT
#ENTRYPOINT /startup.sh
#CMD /sbin/init
